<?xml version="1.1"?>
<!DOCTYPE Tabula_Rasa>
<Algorithme>
  <nom>Carte_js</nom>
  <date_creation>22/1/2023 20:22</date_creation>
  <Elements>
    <Action>
      <Position>220;75</Position>
      <StyleLien>2</StyleLien>
      <PreAssertion>?</PreAssertion>
      <PostAssertion>?</PostAssertion>
      <Titre>Carte.equals(uneCarte)</Titre>
      <DetailsVisible>0</DetailsVisible>
      <DetailsVideVisible>1</DetailsVideVisible>
      <Enfants>
        <Action>
          <Position>211;188</Position>
          <StyleLien>2</StyleLien>
          <PreAssertion>?</PreAssertion>
          <PostAssertion>?</PostAssertion>
          <Titre>Si les cartes ont la même 
valeur, on renvoie true</Titre>
          <DetailsVisible>0</DetailsVisible>
          <DetailsVideVisible>1</DetailsVideVisible>
          <Enfants>
            <Condition>
              <Position>183.5;294</Position>
              <StyleLien>0</StyleLien>
              <estUnique>0</estUnique>
              <operationsLogiques>
                <operation>
                  <Titre>this.valeur == 
uneCarte.getValeur()</Titre>
                  <Enfants>
                    <Action>
                      <Position>225;388</Position>
                      <StyleLien>1</StyleLien>
                      <PreAssertion>?</PreAssertion>
                      <PostAssertion>?</PostAssertion>
                      <Titre>return true</Titre>
                      <DetailsVisible>0</DetailsVisible>
                      <DetailsVideVisible>1</DetailsVideVisible>
                      <Enfants/>
                    </Action>
                  </Enfants>
                </operation>
                <operation>
                  <Titre>Sinon</Titre>
                  <Enfants>
                    <Action>
                      <Position>337;390</Position>
                      <StyleLien>1</StyleLien>
                      <PreAssertion>?</PreAssertion>
                      <PostAssertion>?</PostAssertion>
                      <Titre>return false</Titre>
                      <DetailsVisible>0</DetailsVisible>
                      <DetailsVideVisible>1</DetailsVideVisible>
                      <Enfants/>
                    </Action>
                  </Enfants>
                </operation>
              </operationsLogiques>
            </Condition>
          </Enfants>
        </Action>
      </Enfants>
    </Action>
    <Action>
      <Position>590;73</Position>
      <StyleLien>2</StyleLien>
      <PreAssertion>?</PreAssertion>
      <PostAssertion>?</PostAssertion>
      <Titre>Carte.retournerCarte()</Titre>
      <DetailsVisible>0</DetailsVisible>
      <DetailsVideVisible>1</DetailsVideVisible>
      <Enfants>
        <Action>
          <Position>592;191</Position>
          <StyleLien>2</StyleLien>
          <PreAssertion>?</PreAssertion>
          <PostAssertion>?</PostAssertion>
          <Titre>On inverse le booléen
estRetournee</Titre>
          <DetailsVisible>0</DetailsVisible>
          <DetailsVideVisible>1</DetailsVideVisible>
          <Enfants>
            <Condition>
              <Position>563.5;300</Position>
              <StyleLien>0</StyleLien>
              <estUnique>0</estUnique>
              <operationsLogiques>
                <operation>
                  <Titre>this.estRetournee
= true</Titre>
                  <Enfants>
                    <Action>
                      <Position>501;397</Position>
                      <StyleLien>1</StyleLien>
                      <PreAssertion>?</PreAssertion>
                      <PostAssertion>?</PostAssertion>
                      <Titre>this.estRetournee
← false</Titre>
                      <DetailsVisible>0</DetailsVisible>
                      <DetailsVideVisible>1</DetailsVideVisible>
                      <Enfants/>
                    </Action>
                  </Enfants>
                </operation>
                <operation>
                  <Titre>Sinon</Titre>
                  <Enfants>
                    <Action>
                      <Position>715;394</Position>
                      <StyleLien>1</StyleLien>
                      <PreAssertion>?</PreAssertion>
                      <PostAssertion>?</PostAssertion>
                      <Titre>this.estRetournee
← true</Titre>
                      <DetailsVisible>0</DetailsVisible>
                      <DetailsVideVisible>1</DetailsVideVisible>
                      <Enfants/>
                    </Action>
                  </Enfants>
                </operation>
              </operationsLogiques>
            </Condition>
          </Enfants>
        </Action>
      </Enfants>
    </Action>
    <Action>
      <Position>764;481</Position>
      <StyleLien>2</StyleLien>
      <PreAssertion>?</PreAssertion>
      <PostAssertion>?</PostAssertion>
      <Titre>Carte.afficherPosition()</Titre>
      <DetailsVisible>0</DetailsVisible>
      <DetailsVideVisible>1</DetailsVideVisible>
      <Enfants>
        <Action>
          <Position>501;595</Position>
          <StyleLien>2</StyleLien>
          <PreAssertion>?</PreAssertion>
          <PostAssertion>liste, laCarte, 
grille</PostAssertion>
          <Titre>Initialisation des
variables</Titre>
          <DetailsVisible>1</DetailsVisible>
          <DetailsVideVisible>0</DetailsVideVisible>
          <Enfants>
            <Action>
              <Position>245;697</Position>
              <StyleLien>1</StyleLien>
              <PreAssertion>?</PreAssertion>
              <PostAssertion>?</PostAssertion>
              <Titre>liste ← this.
positionCarte.split(',')</Titre>
              <DetailsVisible>0</DetailsVisible>
              <DetailsVideVisible>1</DetailsVideVisible>
              <Enfants/>
            </Action>
            <Action>
              <Position>415;697</Position>
              <StyleLien>1</StyleLien>
              <PreAssertion>?</PreAssertion>
              <PostAssertion>?</PostAssertion>
              <Titre>laCarte ← document.
createElement('p')</Titre>
              <DetailsVisible>0</DetailsVisible>
              <DetailsVideVisible>1</DetailsVideVisible>
              <Enfants/>
            </Action>
            <Action>
              <Position>586;695</Position>
              <StyleLien>1</StyleLien>
              <PreAssertion>?</PreAssertion>
              <PostAssertion>?</PostAssertion>
              <Titre>grille ← document.
getElementById('grilleMemoire')</Titre>
              <DetailsVisible>0</DetailsVisible>
              <DetailsVideVisible>1</DetailsVideVisible>
              <Enfants/>
            </Action>
          </Enfants>
        </Action>
        <Action>
          <Position>1163;596</Position>
          <StyleLien>2</StyleLien>
          <PreAssertion>liste, laCarte, 
grille</PreAssertion>
          <PostAssertion>?</PostAssertion>
          <Titre>Traitements</Titre>
          <DetailsVisible>1</DetailsVisible>
          <DetailsVideVisible>0</DetailsVideVisible>
          <Enfants>
            <Action>
              <Position>991;699</Position>
              <StyleLien>2</StyleLien>
              <PreAssertion>laCarte,
liste</PreAssertion>
              <PostAssertion>laCarte</PostAssertion>
              <Titre>On définit 
laCarte</Titre>
              <DetailsVisible>1</DetailsVisible>
              <DetailsVideVisible>1</DetailsVideVisible>
              <Enfants>
                <Action>
                  <Position>879;814</Position>
                  <StyleLien>1</StyleLien>
                  <PreAssertion>?</PreAssertion>
                  <PostAssertion>?</PostAssertion>
                  <Titre>laCarte.className ←
un+liste[0]+ deux+liste[1]</Titre>
                  <DetailsVisible>0</DetailsVisible>
                  <DetailsVideVisible>1</DetailsVideVisible>
                  <Enfants/>
                </Action>
                <Action>
                  <Position>1098;813</Position>
                  <StyleLien>1</StyleLien>
                  <PreAssertion>?</PreAssertion>
                  <PostAssertion>?</PostAssertion>
                  <Titre>laCarte.textContent
← this.getValeur()</Titre>
                  <DetailsVisible>0</DetailsVisible>
                  <DetailsVideVisible>1</DetailsVideVisible>
                  <Enfants/>
                </Action>
              </Enfants>
            </Action>
            <Action>
              <Position>1363;700</Position>
              <StyleLien>2</StyleLien>
              <PreAssertion>laCarte,
grille</PreAssertion>
              <PostAssertion>?</PostAssertion>
              <Titre>On affiche laCarte</Titre>
              <DetailsVisible>1</DetailsVisible>
              <DetailsVideVisible>0</DetailsVideVisible>
              <Enfants>
                <Action>
                  <Position>1459;817</Position>
                  <StyleLien>1</StyleLien>
                  <PreAssertion>?</PreAssertion>
                  <PostAssertion>?</PostAssertion>
                  <Titre>grille.appendChild
(laCarte)</Titre>
                  <DetailsVisible>0</DetailsVisible>
                  <DetailsVideVisible>1</DetailsVideVisible>
                  <Enfants/>
                </Action>
              </Enfants>
            </Action>
          </Enfants>
        </Action>
      </Enfants>
    </Action>
    <Action>
      <Position>952;864</Position>
      <StyleLien>1</StyleLien>
      <PreAssertion>?</PreAssertion>
      <PostAssertion>?</PostAssertion>
      <Titre>+carte</Titre>
      <DetailsVisible>0</DetailsVisible>
      <DetailsVideVisible>1</DetailsVideVisible>
      <Enfants/>
    </Action>
    <Action>
      <Position>747;1006</Position>
      <StyleLien>2</StyleLien>
      <PreAssertion>?</PreAssertion>
      <PostAssertion>?</PostAssertion>
      <Titre>Carte.afficherCarte()</Titre>
      <DetailsVisible>0</DetailsVisible>
      <DetailsVideVisible>1</DetailsVideVisible>
      <Enfants>
        <Action>
          <Position>484;1120</Position>
          <StyleLien>2</StyleLien>
          <PreAssertion>?</PreAssertion>
          <PostAssertion>liste, laCarte, 
grille</PostAssertion>
          <Titre>Initialisation des
variables</Titre>
          <DetailsVisible>1</DetailsVisible>
          <DetailsVideVisible>0</DetailsVideVisible>
          <Enfants>
            <Action>
              <Position>228;1222</Position>
              <StyleLien>1</StyleLien>
              <PreAssertion>?</PreAssertion>
              <PostAssertion>?</PostAssertion>
              <Titre>liste ← this.
positionCarte.split(',')</Titre>
              <DetailsVisible>0</DetailsVisible>
              <DetailsVideVisible>1</DetailsVideVisible>
              <Enfants/>
            </Action>
            <Action>
              <Position>398;1222</Position>
              <StyleLien>1</StyleLien>
              <PreAssertion>?</PreAssertion>
              <PostAssertion>?</PostAssertion>
              <Titre>laCarte ← document.
createElement('p')</Titre>
              <DetailsVisible>0</DetailsVisible>
              <DetailsVideVisible>1</DetailsVideVisible>
              <Enfants/>
            </Action>
            <Action>
              <Position>569;1220</Position>
              <StyleLien>1</StyleLien>
              <PreAssertion>?</PreAssertion>
              <PostAssertion>?</PostAssertion>
              <Titre>grille ← document.
getElementById('grilleMemoire')</Titre>
              <DetailsVisible>0</DetailsVisible>
              <DetailsVideVisible>1</DetailsVideVisible>
              <Enfants/>
            </Action>
          </Enfants>
        </Action>
        <Action>
          <Position>1146;1121</Position>
          <StyleLien>2</StyleLien>
          <PreAssertion>liste, laCarte, 
grille</PreAssertion>
          <PostAssertion>?</PostAssertion>
          <Titre>Traitements</Titre>
          <DetailsVisible>1</DetailsVisible>
          <DetailsVideVisible>0</DetailsVideVisible>
          <Enfants>
            <Action>
              <Position>974;1224</Position>
              <StyleLien>2</StyleLien>
              <PreAssertion>laCarte,
liste</PreAssertion>
              <PostAssertion>laCarte</PostAssertion>
              <Titre>On définit 
laCarte</Titre>
              <DetailsVisible>1</DetailsVisible>
              <DetailsVideVisible>1</DetailsVideVisible>
              <Enfants>
                <Action>
                  <Position>806;1336</Position>
                  <StyleLien>1</StyleLien>
                  <PreAssertion>?</PreAssertion>
                  <PostAssertion>?</PostAssertion>
                  <Titre>laCarte.className ←
un+liste[0]+ deux+liste[1]</Titre>
                  <DetailsVisible>0</DetailsVisible>
                  <DetailsVideVisible>1</DetailsVideVisible>
                  <Enfants/>
                </Action>
                <Action>
                  <Position>1041;1334</Position>
                  <StyleLien>2</StyleLien>
                  <PreAssertion>laCarte</PreAssertion>
                  <PostAssertion>laCarte</PostAssertion>
                  <Titre>On définit le texte 
de la carte</Titre>
                  <DetailsVisible>1</DetailsVisible>
                  <DetailsVideVisible>1</DetailsVideVisible>
                  <Enfants>
                    <Condition>
                      <Position>1095.5;1463</Position>
                      <StyleLien>0</StyleLien>
                      <estUnique>0</estUnique>
                      <operationsLogiques>
                        <operation>
                          <Titre>this.estRetournee</Titre>
                          <Enfants>
                            <Action>
                              <Position>969;1585</Position>
                              <StyleLien>1</StyleLien>
                              <PreAssertion>?</PreAssertion>
                              <PostAssertion>?</PostAssertion>
                              <Titre>laCarte.textContent
← this.getValeur()</Titre>
                              <DetailsVisible>0</DetailsVisible>
                              <DetailsVideVisible>1</DetailsVideVisible>
                              <Enfants/>
                            </Action>
                          </Enfants>
                        </operation>
                        <operation>
                          <Titre>Sinon</Titre>
                          <Enfants>
                            <Action>
                              <Position>1288;1589</Position>
                              <StyleLien>1</StyleLien>
                              <PreAssertion>?</PreAssertion>
                              <PostAssertion>?</PostAssertion>
                              <Titre>laCarte.textContent
← this.getPosition()</Titre>
                              <DetailsVisible>0</DetailsVisible>
                              <DetailsVideVisible>1</DetailsVideVisible>
                              <Enfants/>
                            </Action>
                          </Enfants>
                        </operation>
                      </operationsLogiques>
                    </Condition>
                  </Enfants>
                </Action>
              </Enfants>
            </Action>
            <Action>
              <Position>1346;1225</Position>
              <StyleLien>2</StyleLien>
              <PreAssertion>laCarte,
grille</PreAssertion>
              <PostAssertion>?</PostAssertion>
              <Titre>On affiche laCarte</Titre>
              <DetailsVisible>1</DetailsVisible>
              <DetailsVideVisible>0</DetailsVideVisible>
              <Enfants>
                <Action>
                  <Position>1442;1342</Position>
                  <StyleLien>1</StyleLien>
                  <PreAssertion>?</PreAssertion>
                  <PostAssertion>?</PostAssertion>
                  <Titre>grille.appendChild
(laCarte)</Titre>
                  <DetailsVisible>0</DetailsVisible>
                  <DetailsVideVisible>1</DetailsVideVisible>
                  <Enfants/>
                </Action>
              </Enfants>
            </Action>
          </Enfants>
        </Action>
      </Enfants>
    </Action>
    <Action>
      <Position>879;1386</Position>
      <StyleLien>1</StyleLien>
      <PreAssertion>?</PreAssertion>
      <PostAssertion>?</PostAssertion>
      <Titre>+carte</Titre>
      <DetailsVisible>0</DetailsVisible>
      <DetailsVideVisible>1</DetailsVideVisible>
      <Enfants/>
    </Action>
  </Elements>
</Algorithme>
